<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">

	<!-- 사용자 리스트 조회 -->
  <select id="userList" resultType="userVo">
    SELECT * 
    FROM	USERS
    ORDER BY USERID
  </select>
  
  <!--  특정 사용자 조회 -->
  <select id="getUser" parameterType="String" resultType="userVo">
  	SELECT	* 
  	FROM	USERS
  	WHERE 	USERID = #{userId}
  </select>
  
  
  <!-- 사용자 페이지 리스트 조회 -->
  <!-- paveVO int page, int pageSize -->
  <select id="userPagingList" parameterType="pageVo" resultType="userVo">

	SELECT *
 	FROM
		(SELECT A.*, ROWNUM RN
		 FROM
			(SELECT A.* 
 			 FROM    USERS A
 			 ORDER BY USERID) A )
	WHERE RN &gt;= (#{page}-1)*#{pageSize}+1 AND RN &lt;= #{page}*#{pageSize}

<!--   	<![CDATA[ -->
<!--   	SELECT * -->
<!--  	FROM -->
<!-- 		(SELECT A.*, ROWNUM RN -->
<!-- 		 FROM -->
<!-- 			(SELECT A.*  -->
<!--  			 FROM    USERS A -->
<!--  			 ORDER BY USERID) A ) -->
<!-- 	WHERE RN >= (#{page}-1) * #{pageSize}+1 AND RN <= #{page} * #{pageSize} -->
<!-- 	]]> -->
  </select>
  
  
	<!-- 사용자 전체 수 조회 -->
	<select id="usersCnt" resultType="int">
		SELECT /*+ INDEX_FFS(users PK_USERS)*/COUNT(*)
		FROM USERS
	</select>
	
	
	<!-- 새로운 유저 등록 -->
	<insert id="insertUser" parameterType="userVo">
	INSERT INTO USERS
	VALUES
	(
		  #{userId}
		, #{name}
		, #{alias}
		, #{pass}
		, #{addr1}
		, #{addr2}
		, #{zipcd}
		, #{birth}
		, #{path, jdbcType=VARCHAR}
		, #{fileName, jdbcType=VARCHAR}	 
	)
	</insert>
	
	<!-- 유저 삭제 -->
	<delete id="deleteUser" parameterType="string">
	DELETE USERS
	WHERE USERID = #{userId}
	</delete>
	
	<!-- 유저 수정 -->
	<update id="updateUser" parameterType="userVo">
	UPDATE	USERS
	SET		NAME = #{name}
		  , ALIAS = #{alias}
		  , ADDR1 = #{addr1}
		  , ADDR2 = #{addr2}
		  , ZIPCD = #{zipcd}
		  , BIRTH = #{birth, jdbcType=DATE}
		  <if test="path != null">
		  , PATH = #{path, jdbcType=VARCHAR}
		  , FILENAME = #{fileName, jdbcType=VARCHAR}
		  </if>	 
	WHERE USERID = #{userId}
	
	</update>
	
	
	<!-- 사용자 비밀번호 암호화 적용 대상 조회  -->
	<select id="userListForPassEncrypt" resultType="userVo">
		SELECT *
		FROM USERS
		WHERE USERID NOT IN ('brown', 'sally')
	</select>
	
	
	<!-- 사용자 비밀번호 업데이트 -->
	<update id="updateUserEncryptPass" parameterType="userVo">
		UPDATE	USERS 
		SET		PASS = #{pass}
		WHERE	USERID = #{userId}
	</update>
</mapper>